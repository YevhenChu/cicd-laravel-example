name: Code analysis (phpstan, php-cs-fixer, rector)

on: 
  push: 
    branches: ["main"]
  pull_request:
    branches: ["main"]
    
permissions: 
  contents: read
    
jobs:
  phpstan:
    name: phpstan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.2', '8.3']
    env:
      working-directory: ./web 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivamathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ctype, curl, date, dom, fileinfo, gd, hash, iconv, json, libxml, mbstring, mysqlnd, pcntl, PDO, pdo_mysql, posix, random, readline, redis, session, sockets, standard, tokenizer, xdebug, xml, xmlreader, xmlwriter, zlib
          coverage: xdebug
          tools: composer:v2
        env: 
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist
        
      - name: Run phpstan analyzer
        run: ./vendor/bin/phpstan --error-format=github
        working-directory: ${{env.working-directory}}
        
  rector:
    name: rector
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.2', '8.3']
    env:
      working-directory: ./web 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivamathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ctype, curl, date, dom, fileinfo, gd, hash, iconv, json, libxml, mbstring, mysqlnd, pcntl, PDO, pdo_mysql, posix, random, readline, redis, session, sockets, standard, tokenizer, xdebug, xml, xmlreader, xmlwriter, zlib
          coverage: xdebug
          tools: composer:v2
        env: 
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist
        
      - name: Run rector analyzer
        run: vendor/bin/rector process --config rector.php --dry-run
        working-directory: ${{env.working-directory}}

  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.2', '8.3']
    env:
      working-directory: ./web 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivamathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ctype, curl, date, dom, fileinfo, gd, hash, iconv, json, libxml, mbstring, mysqlnd, pcntl, PDO, pdo_mysql, posix, random, readline, redis, session, sockets, standard, tokenizer, xdebug, xml, xmlreader, xmlwriter, zlib
          coverage: xdebug
          tools: composer:v2
        env: 
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist
        
      - name: Run lint analyzer
        run: vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --dry-run --diff --show-progress=none -v
        working-directory: ${{env.working-directory}}
